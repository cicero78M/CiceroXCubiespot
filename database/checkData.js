const fs = require('fs');
let date = new Date();

//Google Spreadsheet
const { GoogleSpreadsheet } = require ('google-spreadsheet');
const { JWT } = require ('google-auth-library');
const { response } = require('express');

const googleCreds = JSON.parse (fs.readFileSync('./database/ciceroKey.json'));

const googleAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: googleCreds.client_email,
  key: googleCreds.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

module.exports = {

  instaCheck: async function instaCheck(sheetName, filesID){

    const targetDoc = new GoogleSpreadsheet(filesID, googleAuth);//Google Auth
    await targetDoc.loadInfo(); // loads document properties and worksheets

    try {

      const sheetTarget = targetDoc.sheetsByTitle[sheetName];
      const rowsData = await sheetTarget.getRows();

      let divisiList= [];

      for (let i = 0; i < rowsData.length; i++){
        if (rowsData[i].get('INSTA') === null || rowsData[i].get('INSTA') === undefined ){
          if(!divisiList.includes(rowsData[i].get('DIVISI'))){
            divisiList.push(rowsData[i].get('DIVISI')); 
         }
        }
      }
 
      let dataInsta = '';
      let userCounter = 0;

      for (let i = 0; i < divisiList.length; i++){
        let divisiCounter = 0 ;
        let userByDivisi = '';

        for (let ii = 0; ii < rowsData.length; ii++){
          if(divisiList[i] === rowsData[ii].get('DIVISI')){
            if (rowsData[ii].get('INSTA') === null || rowsData[ii].get('INSTA') === undefined ){
              userByDivisi = userByDivisi.concat('\n'+rowsData[ii].get('TITLE') +' '+rowsData[ii].get('NAMA'));
              divisiCounter++;
              userCounter++;
            }
          }  
        }

        dataInsta = dataInsta.concat('\n\n'+divisiList[i]+' : '+divisiCounter+' User\n'+userByDivisi);
      }

      let instaSudah = rowsData.length-userCounter;

      let response = "*"+sheetName+"*\n\nInformasi Rekap Data username profile akun Instagram sampai dengan\n\nWaktu Rekap : "+date+"\n\nDengan Rincian Data sbb:\n\nJumlah User : "+rowsData.length+" \nJumlah User Sudah melengkapi: "+instaSudah+"\nJumlah User Belum melengkapi : "+userCounter+"\n\nRincian Data Username Insta :"+dataInsta+"\n\n_System Administrator Cicero_"
      return response;

    } catch (error) {
      console.log(error);
      return 'error'; 
    }
  },

  tiktokCheck: async function tiktokCheck(sheetName, filesID){

    const targetDoc = new GoogleSpreadsheet(filesID, googleAuth);//Google Auth
    await targetDoc.loadInfo(); // loads document properties and worksheets

    try {

      const sheetTarget = targetDoc.sheetsByTitle[sheetName];
      const rowsData = await sheetTarget.getRows();

      let divisiList= [];

      for (let i = 0; i < rowsData.length; i++){
        if (rowsData[i].get('TIKTOK') === null || rowsData[i].get('TIKTOK') === undefined ){
          if(!divisiList.includes(rowsData[i].get('DIVISI'))){
            divisiList.push(rowsData[i].get('DIVISI')); 
         }
        }
      }
 
      let dataInsta = '';
      let userCounter = 0;

      for (let i = 0; i < divisiList.length; i++){
        let divisiCounter = 0 ;
        let userByDivisi = '';

        for (let ii = 0; ii < rowsData.length; ii++){
          if(divisiList[i] === rowsData[ii].get('DIVISI')){
            if (rowsData[ii].get('TIKTOK') === null || rowsData[ii].get('TIKTOK') === undefined ){
              userByDivisi = userByDivisi.concat('\n'+rowsData[ii].get('TITLE') +' '+rowsData[ii].get('NAMA'));
              divisiCounter++;
              userCounter++;
            }
          }  
        }
        dataInsta = dataInsta.concat('\n\n'+divisiList[i]+' : '+divisiCounter+' User\n'+userByDivisi);
      }

      let instaSudah = rowsData.length-userCounter;
      let response = "*"+sheetName+"*\n\nInformasi Rekap Data username profile akun Tiktok sampai dengan\n\nWaktu Rekap : "+date+"\n\nDengan Rincian Data sbb:\n\nJumlah User : "+rowsData.length+" \nJumlah User Sudah melengkapi: "+instaSudah+"\nJumlah User Belum melengkapi : "+userCounter+"\n\nRincian Data Username Insta :"+dataInsta+"\n\n_System Administrator Cicero_"
      return response;

    } catch (error) {
      console.log(error);
      return 'error'; 
    }
  },
}