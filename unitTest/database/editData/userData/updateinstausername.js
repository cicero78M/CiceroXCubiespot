const fs = require('fs');

//Google Spreadsheet
const { GoogleSpreadsheet } = require ('google-spreadsheet');
const { JWT } = require ('google-auth-library');

const ciceroKey = JSON.parse (fs.readFileSync('ciceroKey.json'));

const googleAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: ciceroKey.client_email,
  key: ciceroKey.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

module.exports = {
 //Edit Insta Username to User Data Base   
  updateInstaUsername: async function updateInstaUsername(clientName, idKey, insta, phone, userID){
    

    const instaLink = insta.split('?')[0];
    
    const instaUsername = instaLink.replaceAll('/profilecard/','').split('/').pop();      //Get Last Segment of Links
    const userDoc = new GoogleSpreadsheet(userID, googleAuth);  //Google Auth

    console.log(instaUsername);
    
    try {
      //Insert New Sheet
      await userDoc.loadInfo(); // loads document properties and worksheets
      const userSheet = userDoc.sheetsByTitle[clientName];

      const userRows = await userSheet.getRows();

      let isDataExist = false;
      let instaList = [];
  
      //Collect Divisi List String
      for (let i = 0; i < userRows.length; i++){
        if(!instaList.includes(userRows[i].get('INSTA'))){
          instaList.push(userRows[i].get('INSTA'));
        }
      }

      if(!instaList.includes(instaUsername)){
        
        for (let i = 0; i < userRows.length; i++){
          if (userRows[i].get('ID_KEY') === idKey){

            isDataExist = true;
            userRows[i].assign({INSTA: instaUsername, WHATSAPP: phone}); // Update Insta Value
            await userRows[i].save(); //save update

            let responseData = {
              message : 'Data Updated, untuk melihat data anda saat ini balas pesan dengan: Client#myData#ID_Key',
              state : true,
              code : 200
            }

            console.log('Return Success');

            userDoc.delete;

            return responseData;
          }
        }

      } else {

        isDataExist = true;
        
        let responseData = {
          message : 'Username Instagram is Used by another User',
          state : true,
          code : 200
        }

        console.log('Return Success');

        userDoc.delete;

        return responseData;
      
      }

      if(!isDataExist){

        let responseData = {
          message : 'User Data with delegated ID_KEY Doesn\'t Exist',
          state : true,
          code : 200
        }

        console.log('Return Success');

        userDoc.delete;
        
        return responseData;

      }
    } catch (error) {

      let responseData = {
        message : error,
        state : false,
        code : 303
      }

      console.log('Return Success');

      userDoc.delete;

      return responseData;
    
    }
  }
}