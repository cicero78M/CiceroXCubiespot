const fs = require('fs');

//Google Spreadsheet
const { GoogleSpreadsheet } = require ('google-spreadsheet');
const { JWT } = require ('google-auth-library');

const ciceroKey = JSON.parse (fs.readFileSync('ciceroKey.json'));

const instaReload = require('../scrapper/instalikesreload');
const instaReport = require('../reporting/instalikesreport');

const userDataBase = ciceroKey.dbKey.databaseID;;
const clientDataBase = ciceroKey.dbKey.clientDataID;
const instaOfficialDataBase = ciceroKey.dbKey.instaOfficialID;
const instaLikesUsernameDataBase = ciceroKey.dbKey.instaLikesUsernameID;

const googleAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: googleCreds.client_email,
  key: googleCreds.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

module.exports = { 
    instaLoadClient: async function instaLoadClient(clientID){

      let clientResponse = await sheetDoc.sheetDoc(ciceroKey.dbKey.clientDataID, 'ClientData', );
      let clientRows = clientResponse.data;

        let responseList = [];

        for (let i = 0; i < clientRows.length; i++){

            if(clientRows[i].get('STATUS')  === "TRUE" && clientRows[i].get('INSTA_STATE') === "TRUE" && clientRows[i].get('TYPE') === clientRows.ciceroClientType ){

                console.log(clientRows[i].get('CLIENT_ID')+' Client Loaded');

                let response = await instaReload.reloadInstaLikes(clientRows[i].get('CLIENT_ID'), userDataBase, clientDataBase, 
                instaOfficialDataBase, instaLikesUsernameDataBase);

                responseList.push(response);

                let responsereport = await instaReport.reportInstaLikes(rowsClientData[i].get('CLIENT_ID'), userDataBase, clientDataBase, 
                instaOfficialDataBase, instaLikesUsernameDataBase);

                responseList.push(responsereport);
            } 
        }

        clientDoc.delete;
        
        console.log('Return Success');

        return responseList;
    },
}