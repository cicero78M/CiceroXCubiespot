//Google Spreadsheet
import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';
import { logsSave } from '../../responselogs/logs_modif.js';

export const googleAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.client_email,
  key: process.env.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

export async function newRowsData(
    sheetID, 
    clientName
) {
    return new Promise(
        async (resolve) => {            
        
            await customLoop(sheetID, clientName);

            async function customLoop( sheetID, clientName) {          

                    let dataDoc = new GoogleSpreadsheet(
                        sheetID, 
                        googleAuth
                    );

                    //Google Authentication for client DB
                    await dataDoc.loadInfo(); // loads document properties and worksheets
                
                    let sheetTitle = dataDoc.sheetsByTitle[clientName];
                                        
                    await sheetTitle.getRows().then( response => {
                        let data = {
                            data: response,
                            state: true,
                            code: 200
                        };
              
                        resolve (data);   

                    }).catch( 
                        async error =>{    
                            console.log(error);                            
                            setTimeout(async () => {
                                logsSave("Try-Again");
                            }, 
                                6000
                            );

                            await customLoop(sheetID, clientName);
                        }
                    );
            }
        }
    );
}