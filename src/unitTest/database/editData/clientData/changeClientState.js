const fs = require('fs');

//Google Spreadsheet
const { GoogleSpreadsheet } = require ('google-spreadsheet');
const { JWT } = require ('google-auth-library');

const ciceroKeys = JSON.parse (fs.readFileSync('ciceroKey.json'));

const googleAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: ciceroKeys.client_email,
  key: ciceroKeys.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

module.exports = {
    //Set Client State to Database Client ID  
    setClientState: async function setClientState(clientName, newstate){
        
        try {

            const clientDoc = new GoogleSpreadsheet(ciceroKeys.dbKey.clientDataID, googleAuth);//Google Auth
            await clientDoc.loadInfo(); // loads document properties and worksheets
            const clientSheet = clientDoc.sheetsByTitle['ClientData'];
            const clientRows = await clientSheet.getRows();

            let isClient = false;

            for (let i = 0; i < clientRows.length; i++){
                if (clientRows[i].get('CLIENT_ID') === clientName){
                    isClient = true;
                    clientRows[i].assign({STATUS: newstate});; // Updae State Value
                    await clientRows[i].save(); //save update

                    let response = {
                    message : 'Client State with Client_ID : '+sheetName+' set status to : '+state,
                    state : true,
                    code : 200

                    }
                
                    clientDoc.delete;
                    console.log('Return Success');

                    return response;
                }
            }

            if(!isClient){
                let responseData = {
                    message : 'No Data with Client_ID : '+clientName,
                    state : true,
                    code : 200
                }
                    console.log('Return Success');
                    clientDoc.delete;

                    return responseData;
            }
        } catch (error) {
            
            let responseData = {
                message : 'Data Error',
                state : false,
                code : 303
            }

            console.log(error);
            targetDoc.delete;

            return responseData;
        }
    },  
}