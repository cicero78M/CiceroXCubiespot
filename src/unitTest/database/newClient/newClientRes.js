const fs = require('fs');

const addHeader = require('./sheetProperties');

//Google Spreadsheet
const { GoogleSpreadsheet } = require ('google-spreadsheet');
const { JWT } = require ('google-auth-library');

const googleCreds = JSON.parse (fs.readFileSync('ciceroKey.json'));

const googleAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: googleCreds.client_email,
  key: googleCreds.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

module.exports = {  
  
  //New Client Database by Organizations Source Functions
  newClientRes: async function newClientRes(sheetName, sourceID, filesID){

    const sourceX = sourceID.split('/').pop(); //Get Last Segment of Links    
    const targetDoc = new GoogleSpreadsheet(filesID, googleAuth); //Google Auth

    try {
        //Create All Sheet With Properties
        
      //Insert New Sheet
      const targetSheet = await targetDoc.addSheet({ title: sheetName, headerValues:['ID_KEY', 'NAMA', 'TITLE', 'DIVISI', 'JABATAN', 'STATUS', 
        'WHATSAPP', 'INSTA', 'TIKTOK'] });
      console.log(targetSheet.title);

      const sourceDoc = new GoogleSpreadsheet(sourceX, googleAuth); //Google Auth
      await sourceDoc.loadInfo(); // loads document properties and worksheets

      const sheetSource = sourceDoc.sheetsByTitle[sheetName]; //Get Source Sheet Documents by Title
      const rowsSource = await sheetSource.getRows(); //Get Sheet data By Rows
      
      await targetDoc.loadInfo(); // loads document properties and worksheets
      const sheetTarget = targetDoc.sheetsByTitle[sheetName]; //Get Target Sheet Documents by Title

      var userData = [];

      for (let i = 0; i < rowsSource.length; i++){

        userData.push({ID_KEY: rowsSource[i].get('NRP'), NAMA: rowsSource[i].get('NAMA'), TITLE: rowsSource[i].get('PANGKAT'), 
          DIVISI: rowsSource[i].get('SATFUNG'), JABATAN: rowsSource[i].get('JABATAN'), STATUS: true, WHATSAPP: rowsSource[i].get('WHATSAPP'), 
          INSTA: rowsSource[i].get('IG1'), TIKTOK: rowsSource[i].get('TIKTOK')});

      }

      await sheetTarget.addRows(userData);

      let responseData = {
        message : 'Adding '+sheetName+ ' as Client, and post user data to DB Client',
        state : true,
        code : 1
      }

      console.log('Return Success');

      targetDoc.delete;

      return responseData;

    } catch (error) {

      let responseData = {
        message : error,
        state : false,
        code : 0
      }

      console.log('Return Success');

      targetDoc.delete;

      return responseData;
    
    }
  },

};